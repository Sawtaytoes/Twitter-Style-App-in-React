# Basic User Info including associated Tweets
type User {
	joinTime: DateTime
	tweets(content: String): [Tweet]!
	userId: Int!
	username: String
}

# A single Tweet including a link back to User
type Tweet {
	content: String
	postTime: DateTime
	tweetId: Int!
	user: User!
	userId: Int
}

# Custom type for extending JS dates to include string and Unix variants
type DateTime {
	time: String
	unixTime: String
}

# Get Tweets and Users
type Query {
	tweet(tweetId: Int): Tweet
	tweets(userId: Int, content: String): [Tweet]!
	user(userId: Int): User
	users(username: String): [User]!
}

# Add, Edit, and Remove Tweets and Users
type Mutation {
	addTweet(input: AddTweetInput!): Tweet
	updateTweet(input: UpdateTweetInput!): Tweet
	addUser(input: AddUserInput!): User
	loginUser(input: LoginUserInput!): User
	updateUser(input: UpdateUserInput!): User
}

# Login User
input LoginUserInput {
	username: String!,
	password: String!,
}

# Add User
input AddUserInput {
	username: String!,
	password: String!,
}

# Update User
input UpdateUserInput {
	userId: Int!,
	displayName: String!,
}

# Add Tweet
input AddTweetInput {
	userId: Int!,
	content: String!,
}

# Update Tweet
input UpdateTweetInput {
	tweetId: Int!,
	content: String!,
}

schema {
	query: Query
	mutation: Mutation
}
